buildscript {
    repositories {
        maven { 
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

//plugins {
//    id "com.jfrog.bintray" version "1.7"
//}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

//evaluationDependsOn(":..:Chameleon-${minecraft_base_version}")

//ext {
//    chameleon = project(":..:Chameleon-${minecraft_base_version}")
//}

version = "${minecraft_version}-${mod_version}"
group= "com.jaquadro.minecraft.storagedrawers" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "StorageDrawers"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' 

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: forge_mappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run').canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                storagedrawers {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run').canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                storagedrawers {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run').canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'hungerstrike', '--all', '--output', file('src/generated/resources/')

            mods {
                storagedrawers {
                    source sourceSets.main
                }
            }
        }
    }

    //replaceIn "StorageDrawers.java"
    //replace '@VERSION@', project.version
    //replace 'required-after:chameleon', "required-after:chameleon@[${chameleon_version},${chameleon_max_version})"
}

repositories {
    maven { // JEI
        name = "JEI repo"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { // CraftTweaker
        name = "jared maven"
        url "http://maven.blamejared.com/"
    }
    maven { // HWYLA
        name = "HWYLA repo"
        url "http://tehnut.info/maven"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.forge_version}"

    //compile chameleon

    //compileOnly "mezz.jei:jei-${minecraft_version}:${jei_version}:api"
    //compile fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")

    compileOnly "mcp.mobius.waila:Hwyla:${hwyla_version}:api"
//    compile fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}")

    //deobfCompile "MineTweaker3:MineTweaker3-API:${mt_version}"
    //deobfCompile "org.ow2.asm:asm-debug-all:5.0.3"
}

processResources
{
    from (sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.version
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "storagedrawers",
            "Specification-Vendor": "Justin Aquadro",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Justin Aquadro",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    //include "com/jaquadro/minecraft/storagedrawers/**"
    //include "assets/**"
    //include "mcmod.info"
    //include "pack.mcmeta"
}

//task deobfJar(type: Jar) {
//    from sourceSets.main.output
//    classifier = 'deobf'
//}
//

task apiJar(type: Jar) {
    classifier = 'api'
    include 'com/jaquadro/minecraft/storagedrawers/api/**/*'
    from sourceSets.main.allSource
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

tasks.build.dependsOn apiJar, sourcesJar

//artifacts {
//    archives deobfJar
//    archives apiJar
//    archives sourceJar
//    archives jar
//}
//
//publishing.publications {
//    StorageDrawers(MavenPublication) {
//        groupId = project.group
//        artifactId = project.archivesBaseName
//        version = project.version
//        artifact deobfJar
//        artifact sourceJar
//        artifact apiJar
//        artifact jar
//    }
//}
//
//bintrayUpload.dependsOn build
//
//bintray {
//    user = System.getenv('BINTRAY_USER')
//    key = System.getenv('BINTRAY_KEY')
//    publications = ['StorageDrawers']
//    publish = true
//    pkg {
//        repo = 'dev'
//        name = 'storagedrawers'
//        version {
//            name = project.version
//            released = new Date()
//        }
//    }
//}